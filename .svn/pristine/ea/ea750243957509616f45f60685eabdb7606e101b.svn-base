/*!
 * =====================================================
 * zs v1.0.0 ()
 * =====================================================
 */
!
function(mui, zs) {
	zs.SettingsPage = zs.UserPage.extend({
		initPage: function() {},
		initEvent: function() {
			mui.plusReady(function() {
				var wgtVer = null;
				plus.runtime.getProperty(plus.runtime.appid, function(inf) {
					wgtVer = inf.version;
					zs.d("当前应用版本：" + wgtVer);
				});
				mui(document.body).on('tap', '#logout', function() {
					zs.User.logout(function() {
						zs.open('login.html', 'login');
						setTimeout(function() {
							var views = plus.webview.all();
							for (var i = 0; i < views.length; i++) {
								if (views[i].id != 'login') views[i].close();
							}
						}, 2000);

					});
				})
				window.addEventListener('resh', function(event) {
					var type = event.detail.from; //首页传的数据	
					plus.runtime.getProperty(plus.runtime.appid, function(inf) {
						wgtVer = inf.version;
						zs.d("当前应用版本：" + wgtVer);
						//alert(wgtVer);
						check_version(type,wgtVer);
					});
					
					
				})
				mui(document.body).on('tap', '#update', function() {					
					check_version();

				});
				function check_version(type,wgtVer){
					var params = {
						version: wgtVer
					}
					//alert(wgtVer);
					if(!type){
						plus.nativeUI.showWaiting("检测更新...");
					}					
					zs.Api.post('help', 'check_version', params, function(a) {
						plus.nativeUI.closeWaiting();
						if (a.status == 1) {
							var newVer = a.data;
							alert(newVer);
							alert(wgtVer);
							if (wgtVer && newVer && (wgtVer != newVer)) {
								zs.confirm("检测到新版本,是否更新？", function(ret) {	
									downWgt(); // 下载升级包
								})
							} else {
								if(!type){
									plus.nativeUI.alert("无新版本可更新！");
								}								
							}
						} else {
							zs.d("检测更新失败！");
							if(!type){
								plus.nativeUI.alert("检测更新失败！");
							}							
						}
					});
				}
				// 下载wgt文件			
				function downWgt() {
					plus.nativeUI.showWaiting("下载更新文件...");
					var dask = plus.downloader.createDownload(zs.wgtUrl, {
						filename: "_doc/update/"
					}, function(d, status) {
						if (status == 200) {
							zs.d("下载更新文件成功：" + d.filename);
							installWgt(d.filename); // 安装wgt包
						} else {
							zs.d("下载更新文件失败！");
							plus.nativeUI.alert("下载wgt失败！");
						}
						plus.nativeUI.closeWaiting();
					})
					dask.start();
				}
				// 更新应用资源
				function installWgt(path) {
					plus.nativeUI.showWaiting("安装更新文件...");
					plus.runtime.install(path, {
						force: true
					}, function() {
						plus.nativeUI.closeWaiting();
						zs.d("安装更新文件成功！");
						plus.nativeUI.alert("应用资源更新完成！", function() {
							plus.runtime.restart();
						});
					}, function(e) {
						plus.nativeUI.closeWaiting();
						zs.d("安装wgt文件失败[" + e.code + "]：" + e.message);
						plus.nativeUI.alert("安装wgt文件失败[" + e.code + "]：" + e.message);
					});
				}
			})
		},
	});
}(mui, zs);